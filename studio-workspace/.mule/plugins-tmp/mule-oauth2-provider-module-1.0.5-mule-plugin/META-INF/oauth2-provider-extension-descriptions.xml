<?xml version="1.0" encoding="UTF-8"?>
<extension-documentation>
    <configs>
        <config name="config">
            <description><![CDATA[OAuth2 Provider module configuration]]></description>
            <parameters>
                <parameter name="providerName">
                    <description><![CDATA[The provider name supplied to customers of the API.]]></description>
                </parameter>
                <parameter name="listenerConfig">
                    <description><![CDATA[Name of a valid listener configuration used to handle incoming requests.]]></description>
                </parameter>
                <parameter name="clientValidationRateLimiter">
                    <description><![CDATA[The rate limiter used to control access to certain operations. If none is specified PeriodRateLimiter will be used as default.]]></description>
                </parameter>
                <parameter name="clientStore">
                    <description><![CDATA[A store that allows retrieving client configuration information, like their secret. If no client store is provided, a default in memory object store is configured.]]></description>
                </parameter>
                <parameter name="resourceOwnerSecurityProvider">
                    <description><![CDATA[The security provider used to authenticate resource owners. Not needed if only the CLIENT_CREDENTIALS grant type is used.]]></description>
                </parameter>
                <parameter name="clientSecurityProvider">
                    <description><![CDATA[The security provider used to authenticate clients. Not needed if only public clients or private clients with secrets are used]]></description>
                </parameter>
                <parameter name="tokenGeneratorStrategy">
                    <description><![CDATA[The strategy used to generate access tokens. Should reference a class that implements TokenGeneratorStrategy]]></description>
                </parameter>
                <parameter name="supportedGrantTypes">
                    <description><![CDATA[The comma-separated grant types this provider will support. If none specified, only the authorization code grant type will be supported.]]></description>
                </parameter>
                <parameter name="scopes">
                    <description><![CDATA[A comma-separated list of supported scopes.]]></description>
                </parameter>
                <parameter name="defaultScopes">
                    <description><![CDATA[A comma-separated list of the default scopes a client should have if none is defined.]]></description>
                </parameter>
                <parameter name="tokenConfig">
                    <description><![CDATA[Information for configuring token related behaviour.]]></description>
                </parameter>
                <parameter name="authorizationConfig">
                    <description><![CDATA[Information for configuring authorization handling behaviour]]></description>
                </parameter>
                <parameter name="clients">
                    <description><![CDATA[A list of clients.]]></description>
                </parameter>
                <parameter name="expirationPolicy">
                    <description><![CDATA[Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.]]></description>
                </parameter>
            </parameters>
        </config>
    </configs>
    <connections/>
    <extension name="OAuth2 Provider">
        <description><![CDATA[Module that provides support for Mule acting as OAuth2 provider.]]></description>
        <parameters/>
    </extension>
    <operations>
        <operation name="createClient">
            <description><![CDATA[Creates a new client and saves it in the configured client store. <p/> ../../../doc/oauth2-provider-connector.xml.sample oauth2-provider:create-client]]></description>
            <parameters>
                <parameter name="clientId">
                    <description><![CDATA[the Client Id]]></description>
                </parameter>
                <parameter name="type">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="secret">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="clientName">
                    <description><![CDATA[a friendly name for the Client]]></description>
                </parameter>
                <parameter name="description">
                    <description><![CDATA[a brief description of the Client]]></description>
                </parameter>
                <parameter name="principal">
                    <description><![CDATA[An optional principal to use when the ID can't be used with the security provider]]></description>
                </parameter>
                <parameter name="redirectUris">
                    <description><![CDATA[a list with the Client's valid redirect uris]]></description>
                </parameter>
                <parameter name="authorizedGrantTypes">
                    <description><![CDATA[the Client's supported grant types]]></description>
                </parameter>
                <parameter name="scopes">
                    <description><![CDATA[the Client's supported scopes]]></description>
                </parameter>
                <parameter name="failIfPresent">
                    <description><![CDATA[boolean to indicate if the operation should fail when the client id is already used. Otherwise it should override the infotmation for the registered client]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="deleteClient">
            <description><![CDATA[<p> Deletes a client from the store. </p> ../../../doc/oauth2-provider-connector.xml.sample oauth2-provider:delete-client]]></description>
            <parameters>
                <parameter name="clientId">
                    <description><![CDATA[the Client Id]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="revokeToken">
            <description><![CDATA[<p> Revokes an access token or refresh token, invalidating the related refresh token or access token as well. If client credentials need to be validated the validateClient credential should be used before. </p> ../../../doc/oauth2-provider-connector.xml.sample oauth2-provider:revoke-token]]></description>
            <parameters>
                <parameter name="token">
                    <description><![CDATA[the token to revoke, it can be an access token or a refresh token]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="validateToken">
            <description><![CDATA[<p> Checks that a valid access token is provided. </p> <p/> ../../../doc/oauth2-provider-connector.xml.sample oauth2-provider:validate]]></description>
            <parameters>
                <parameter name="accessToken">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="scopes">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="resourceOwnerRoles">
                    <description><![CDATA[The resource owner roles to enforce when validating the token]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
            </parameters>
        </operation>
    </operations>
    <sources/>
    <types>
        <type name="com.mulesoft.modules.oauth2.provider.api.Constants">
            <description><![CDATA[Constants used along the module

 @since 1.0.0]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.client.Client">
            <description><![CDATA[POJO for storing client's information.

 @since 1.0.0]]></description>
            <parameters>
                <parameter name="clientId">
                    <description><![CDATA[A unique Id that will used to reference the client]]></description>
                </parameter>
                <parameter name="principal">
                    <description><![CDATA[An optional principal to use when the ID can't be used with the security
 provider.]]></description>
                </parameter>
                <parameter name="clientName">
                    <description><![CDATA[The name of the client]]></description>
                </parameter>
                <parameter name="description">
                    <description><![CDATA[A short description for the client]]></description>
                </parameter>
                <parameter name="secret">
                    <description><![CDATA[A client secret used to authenticate the client]]></description>
                </parameter>
                <parameter name="clientRedirectUris">
                    <description><![CDATA[List of registered redirectUris that will be used to respond to the client once the request has been processed.
 </p>
 Most request allow the definition of new redirection Uris so these will not always be taken into account.]]></description>
                </parameter>
                <parameter name="clientAuthorizedGrantTypes">
                    <description><![CDATA[The grant types that define which OAuth flows this client will be able to be successfully execute in order to get a token.]]></description>
                </parameter>
                <parameter name="clientScopes">
                    <description><![CDATA[The scopes that will match this client. If a request is received with this clientId but different scopes, it will not be processed.]]></description>
                </parameter>
                <parameter name="type">
                    <description><![CDATA[The client type that defines if the client is able to maintain confidentiality of it's credentials.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.code.AuthorizationConfig">
            <description><![CDATA[POJO to store information about authorization's handling configuration

 @since 1.0.0]]></description>
            <parameters>
                <parameter name="loginPage">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="path">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="authorizationCodeStore">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.exception.OAuth2Exception">
            <description><![CDATA[Base exception thrown when there is an error related to an operation defined in the oauth provider.
 </p>
 This exception will be responsible of storing all the information needed to answer via http correctly. That is accomplished
 by storing the a org.mule.extension.http.api.HttpListenerResponseAttributes defined.

 @since 1.0.0]]></description>
            <parameters>
                <parameter name="errorMessage">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.ratelimit.PeriodRateLimiter">
            <description><![CDATA[Rate limiter that resets according to a defined time period.
 </p>
 If the fauilure count is reached, the rate limiter will start rejecting operations until the period id completed, and reset after.

 @since 1.0.0]]></description>
            <parameters>
                <parameter name="duration">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="durationTimeUnit">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="maximumFailureCount">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.ratelimit.RateLimiter">
            <description><![CDATA[A rate limiter will reject operations given a condition met.

 @since 1.0.0]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.token.TokenConfig">
            <description><![CDATA[POJO that stores configuration information for how to handle tokens

 @since 1.0.0]]></description>
            <parameters>
                <parameter name="path">
                    <description><![CDATA[Endpoint to call when wanting to request a new token]]></description>
                </parameter>
                <parameter name="tokenStore">
                    <description><![CDATA[ObjectStore configuration information for storing token related data]]></description>
                </parameter>
                <parameter name="refreshTokenStrategy">
                    <description><![CDATA[The refresh token strategy to use. By default no refresh token should be generated]]></description>
                </parameter>
                <parameter name="tokenTtl">
                    <description><![CDATA[The time in seconds before an access token code expires.]]></description>
                </parameter>
                <parameter name="tokenTtlTimeUnit">
                    <description><![CDATA[The time unit for the token ttl.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.token.generator.MultipleRefreshTokensStrategy">
            <description><![CDATA[{@inheritDoc}

 Refresh token strategy where every time a token is refreshed, a new, different refresh token is granted.

 @since 1.0.0]]></description>
            <parameters>
                <parameter name="objectStore">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.token.generator.NoRefreshTokenStrategy">
            <description><![CDATA[{@inheritDoc}

 Refresh token strategy used when no refresh tokens will be granted with an access token.

 @since 1.0.0]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.token.generator.RefreshTokenStrategy">
            <description><![CDATA[Interface to implement according to the refresh token strategy wanted.

 @since 1.0]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.token.generator.SingleRefreshTokenStrategy">
            <description><![CDATA[{@inheritDoc}

 Refresh token strategy used when every time a token is refreshed, the same refresh token is granted with the new access token.

 @since 1.0.0]]></description>
            <parameters>
                <parameter name="objectStore">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.modules.oauth2.provider.api.token.generator.TokenGeneratorStrategy">
            <description><![CDATA[Represents a Token Generation mechanism strategy.]]></description>
            <parameters/>
        </type>
    </types>
</extension-documentation>
